- name: "zsh | Install AUR dependencies"
  kewlfft.aur.aur:
    use: "yay"
    state: "latest"
    name: "{{ item }}"
  with_items:
    - starship
  become_user: "aur_builder"
  become: true


- name: "zsh | Ensure zsh XDG config dir globally"
  ansible.builtin.lineinfile:
    path: "/etc/zsh/zshenv"
    line: 'export ZDOTDIR="${XDG_CONFIG_HOME:-${HOME}/.config}/zsh"'
    create: true
  become: true

- name: "zsh | Remove old .zshrc"
  ansible.builtin.file:
    path: "{{ user_home }}/.zshrc"
    state: absent

- name: "zsh | Ensure directories"
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ xdg_data_home }}/zsh/plugins"
    - "{{ xdg_data_home }}/zsh/themes"
    - "{{ xdg_cache_home }}/zsh"
    - "{{ xdg_config_home }}/zsh"

- name: "zsh | Symlink config directory"
  ansible.builtin.file:
    src: "{{ role_path }}/files/config/"
    dest: "{{ xdg_config_home }}/zsh"
    state: link
    force: true

- name: "zsh | Symlink starship config"
  ansible.builtin.file:
    src: "{{ role_path }}/files/starship.toml"
    dest: "{{ xdg_config_home }}/starship.toml"
    state: link
    force: true

- name: "zsh | Set as default terminal"
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    shell: "/usr/bin/zsh"
  become: true

- name: "zsh | Ensure plugins are enabled"
  ansible.builtin.template:
    src: "plugins.zsh.j2"
    dest: "{{ xdg_data_home }}/zsh/plugins.zsh"

- name: "zsh | Clone enabled plugins"
  ansible.builtin.git:
    repo: "{{ item.repo }}"
    dest: "{{ xdg_data_home }}/zsh/plugins/{{ item.name }}"
  with_items: "{{ plugins }}"
  when: "item.name is defined and item.repo is defined and item.enabled"

- name: "zsh | Remove disabled plugins"
  ansible.builtin.file:
    path: "{{ xdg_data_home }}/zsh/plugins/{{ item.name }}"
    state: "absent"
  with_items: "{{ plugins }}"
  when: "item.name is defined and not item.enabled"
